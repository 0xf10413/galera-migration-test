- name: Common configuration
  hosts: all
  become: true

  tasks:
    - name: Ensure no other version of docker is running
      ansible.builtin.package:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Install extra tools
      ansible.builtin.package:
        name: gpg
        state: present

    - name: Add docker CE key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add docker CE repository
      apt_repository:
        repo: deb https://download.docker.com/linux/debian buster stable
        state: present

    - name: Install docker and client libs
      package:
        name:
          - docker-ce
          - python3-docker
        state: present

    # TODO: might need to add a proxy,
    # dockerhub became quite stingy with their pull rates
    - name: Pre-pull symmetricds image
      community.docker.docker_image:
        name: jumpmind/symmetricds:3.13.4
        source: pull

    - name: Create symmetricds configuration folder
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - /srv/symmetricds
        - /srv/symmetricds/engines
        - /srv/symmetricds/patches

    - name: Create symmetric db
      community.mysql.mysql_db:
        name: symmetric
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create symmetric user
      community.mysql.mysql_user:
        name: symmetric
        host: "%"
        password: symmetric # TODO: this should be in a vault
        # TODO: probably more privileges needed
        # https://www.symmetricds.org/doc/3.5/html/databases.html
        priv:
          "symmetric.*": "ALL"
          "*.*": "TRIGGER,CREATE ROUTINE"
          # Tables to be duplicated
          "my_app.*": "SELECT,INSERT,UPDATE,DELETE"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    # TODO: probably some kind of restart needed if it changes.
    # Unless it can reload dynamically?
    - name: Install symmetricds configuration
      ansible.builtin.copy:
        src: "{{ inventory_hostname }}.properties"
        dest: /srv/symmetricds/engines

    - name: Install patches for symmetricds (unix socket handling)
      ansible.builtin.get_url:
        url: "https://repo1.maven.org/maven2/com/kohlschutter/junixsocket/{{ item }}/2.4.0/{{ item }}-2.4.0.jar"
        dest: "/srv/symmetricds/patches/{{ item }}-2.4.0.jar"
      loop:
        - junixsocket-native-common
        - junixsocket-common
        - junixsocket-mysql

    # Needs to be done at the end, startup will do a lot of things
    - name: Create symmetricds container
      community.docker.docker_container:
        name: symmetricds
        image: jumpmind/symmetricds:3.13.4
        published_ports:
          - "31415:31415"
        mounts:
          - type: bind
            source: /var/run/mysqld/
            target: /var/run/mysqld/
          - type: bind
            source: /srv/symmetricds/engines
            target: /opt/symmetric-ds/engines
          - type: bind
            source: /srv/symmetricds/patches
            target: /opt/symmetric-ds/patches

- name: Configure server
  hosts: server1
  become: true

  handlers:
    - name: Restart symmetric container
      community.docker.docker_container:
        name: symmetricds
        restart: yes

  tasks:
    - name: Wait for node readiness
      community.mysql.mysql_query:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_db: symmetric
        query: select node_id from sym_node_host where node_id = '000'
      register: result
      until: result.rowcount is defined and result.rowcount == [1]
      retries: 10
      delay: 3

    - name: Create symmetricds db configuration
      community.mysql.mysql_query:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_db: symmetric
        query:
          # Groups
          # TODO: is it necessary...?
          - INSERT IGNORE INTO sym_node_group (node_group_id) VALUES ('master')
          - INSERT IGNORE INTO sym_node_group (node_group_id) VALUES ('slave')
          # Groups links
          # master pushes changes into slave, slave waits for master's changes
          - INSERT IGNORE INTO sym_node_group_link (source_node_group_id, target_node_group_id, data_event_action) VALUES ('master', 'slave', 'P')
          - INSERT IGNORE INTO sym_node_group_link (source_node_group_id, target_node_group_id, data_event_action) VALUES ('slave', 'master', 'W')
          # Routers
          - INSERT IGNORE INTO sym_router (router_id, source_node_group_id, target_node_group_id, create_time, last_update_time) VALUES ('master-2-slave','master', 'slave', current_timestamp, current_timestamp)
          # Channels
          - INSERT IGNORE INTO sym_channel (channel_id, processing_order, max_batch_size, enabled) values('master-2-slave', 1, 100000, 1);
          # Triggers
          - INSERT IGNORE INTO sym_trigger (trigger_id, source_catalog_name, source_table_name, channel_id, last_update_time, create_time) values ('all', 'my_app', '*', 'master-2-slave', current_timestamp, current_timestamp)
          # Triggers routers
          - INSERT IGNORE INTO sym_trigger_router (trigger_id, router_id, last_update_time, create_time) VALUES ('all','master-2-slave', current_timestamp, current_timestamp);
      notify: Restart symmetric container

    - name: Request full DB sync
      community.mysql.mysql_query:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_db: symmetric
        query: INSERT INTO sym_table_reload_request (target_node_id, source_node_id, trigger_id, router_id, create_time, last_update_time) VALUES ('001', '000', 'all', 'master-2-slave', current_timestamp, current_timestamp);
